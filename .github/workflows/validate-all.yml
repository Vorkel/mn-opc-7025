name: Validation Complète du Projet

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 2 * * 1" # Tous les lundis à 2h du matin

jobs:
  validate-all:
    runs-on: ubuntu-latest

    steps:
      - name: Récupération du code
        uses: actions/checkout@v4

      - name: Configuration de Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Installation des dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_minimal.txt
          pip install -r streamlit_app/requirements.txt
          pip install pytest pytest-asyncio httpx black flake8

      - name: Vérification du formatage du code
        run: |
          black --check --diff api/ streamlit_app/ src/

      - name: Vérification de la qualité du code
        run: |
          flake8 api/ streamlit_app/ src/ --max-line-length=88 --extend-ignore=E203,W503

      - name: Tests unitaires
        run: |
          python -m pytest tests/ -v --cov=src --cov=api --cov-report=xml

      - name: Validation des modèles ML
        run: |
          python -c "
          import joblib
          import os
          models_dir = 'models'
          if os.path.exists(models_dir):
              for file in os.listdir(models_dir):
                  if file.endswith('.pkl'):
                      model_path = os.path.join(models_dir, file)
                      try:
                          model = joblib.load(model_path)
                          print(f'Modèle {file} chargé avec succès')
                      except Exception as e:
                          print(f'Erreur chargement {file}: {e}')
                          exit(1)
          else:
              print('Dossier models/ non trouvé')
          "

      - name: Upload des résultats de couverture
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
